/**
 * This file is partiallty generated. Only make modifications between
 * BEGIN MANUAL SECTION and END MANUAL SECTION designators.
 * 
 * This file is was generated by ./sc scraper script command.
 */
package scraper

import collection.JavaConverters._
import org.jsoup.nodes.Document
import org.jsoup.nodes.Element

import common.CountryType._
import crawler.CrawlerTypes._
/** BEGIN MANUAL SECTION */
/** END MANUAL SECTION */

object WebScraperPRScienceTrustArticle extends TWebScraper {

  def apply(
    page: WebPage,
    linkText: String,
    link: URL,
    html: String,
  ): Option[WebArticle] = {
    val doc = parseHTMLDocument(html).select("#main")
    /** BEGIN MANUAL SECTION */
    val baseURL = page.url.split("/blog")(0).strip
    val title = doc.select(".entry-title").text().strip
    val img = doc.select("img").attr("src").strip
    val content = doc.select(".post-content")
    val authorStrongTagArr = content
      .select("div.fusion-layout-column.fusion_builder_column.fusion-builder-column-1")
      .select("strong")
    val author = if (authorStrongTagArr.asScala.length == 2) {
        authorStrongTagArr.asScala(1).text().strip
      } else {
        ""
      }
    val outBoundLinks = content.select("a")
      .asScala
      .map(anchorTag => {
        val href = anchorTag.attr("href").strip
        val fullOutboundLink = if (href.startsWith("http")) {
          href
        } else {
          s"$baseURL$href"
        }
        (anchorTag.text().strip, fullOutboundLink)
      })
      .filter(pair => !pair._1.isEmpty && !pair._2.isEmpty)
      .toSet

    val dateStrParts = doc.select(".fusion-meta-info")
      .text()
      .split("\\|")

    val date = if (dateStrParts.length > 1) {
      val datetime = dateStrParts(1).strip.split("T")
      //2020-07-22T01:02:17-04:00July 22nd, 2020
      if (datetime.length > 0) {
        val nums = datetime(0).split("-") //2020-07-22
        Some(ArticleDate(nums(2).toInt, nums(1).toInt, nums(0).toInt))
      } else None
    } else {
      None
    }

    val text = 
      doc.select("div.fusion-layout-column.fusion_builder_column.fusion-builder-column-2")
        .text()
        .strip
    
    val wa = WebArticle(
      origin = page,
      originLinkText = linkText,
      fullyQualifiedLink = link,
      title = title,
      author = if (!author.isEmpty) Some(author) else None,
      datePublished = date,
      outBoundLinks = outBoundLinks,
      image = if (!img.isEmpty) Some(img) else None,
      text = text,
    )
    Some(wa)
    /** END MANUAL SECTION */
  }
  /** BEGIN MANUAL METHOD SECTION */
  /** END MANUAL METHOD SECTION */
}

